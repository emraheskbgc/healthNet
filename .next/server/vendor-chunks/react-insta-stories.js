/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-insta-stories";
exports.ids = ["vendor-chunks/react-insta-stories"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-insta-stories/dist/index.js":
/*!********************************************************!*\
  !*** ./node_modules/react-insta-stories/dist/index.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\n\telse {}\n})(this, (__WEBPACK_EXTERNAL_MODULE__639__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 931:\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_624__) => {\n\n__nested_webpack_require_624__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_624__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_624__(639);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_624__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _excluded = [\"styles\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (_ref) {\n  var _ref$styles = _ref.styles,\n    styles = _ref$styles === void 0 ? {} : _ref$styles,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", _extends({\n    width: \"44\",\n    height: \"44\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    stroke: \"#fff\"\n  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"22\",\n    cy: \"22\",\n    r: \"1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n    attributeName: \"r\",\n    begin: \"0s\",\n    dur: \"1.8s\",\n    values: \"1; 20\",\n    calcMode: \"spline\",\n    keyTimes: \"0; 1\",\n    keySplines: \"0.165, 0.84, 0.44, 1\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n    attributeName: \"stroke-opacity\",\n    begin: \"0s\",\n    dur: \"1.8s\",\n    values: \"1; 0\",\n    calcMode: \"spline\",\n    keyTimes: \"0; 1\",\n    keySplines: \"0.3, 0.61, 0.355, 1\",\n    repeatCount: \"indefinite\"\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"circle\", {\n    cx: \"22\",\n    cy: \"22\",\n    r: \"1\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n    attributeName: \"r\",\n    begin: \"-0.9s\",\n    dur: \"1.8s\",\n    values: \"1; 20\",\n    calcMode: \"spline\",\n    keyTimes: \"0; 1\",\n    keySplines: \"0.165, 0.84, 0.44, 1\",\n    repeatCount: \"indefinite\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"animate\", {\n    attributeName: \"stroke-opacity\",\n    begin: \"-0.9s\",\n    dur: \"1.8s\",\n    values: \"1; 0\",\n    calcMode: \"spline\",\n    keyTimes: \"0; 1\",\n    keySplines: \"0.3, 0.61, 0.355, 1\",\n    repeatCount: \"indefinite\"\n  }))));\n});\n\n/***/ }),\n\n/***/ 120:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_4346__) {\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_4346__(639));\nvar Global_1 = __importDefault(__nested_webpack_require_4346__(267));\nvar Stories_1 = __importDefault(__nested_webpack_require_4346__(486));\nvar Progress_1 = __importDefault(__nested_webpack_require_4346__(552));\nvar Story_1 = __importDefault(__nested_webpack_require_4346__(832));\nvar ProgressArray_1 = __importDefault(__nested_webpack_require_4346__(913));\nvar use_is_mounted_1 = __importDefault(__nested_webpack_require_4346__(342));\nvar usePreLoader_1 = __nested_webpack_require_4346__(402);\nfunction default_1() {\n  var _ref = (0, react_1.useState)(0),\n    _ref2 = _slicedToArray(_ref, 2),\n    currentId = _ref2[0],\n    setCurrentId = _ref2[1];\n  var _ref3 = (0, react_1.useState)(true),\n    _ref4 = _slicedToArray(_ref3, 2),\n    pause = _ref4[0],\n    setPause = _ref4[1];\n  var _ref5 = (0, react_1.useState)(true),\n    _ref6 = _slicedToArray(_ref5, 2),\n    bufferAction = _ref6[0],\n    setBufferAction = _ref6[1];\n  var _ref7 = (0, react_1.useState)(0),\n    _ref8 = _slicedToArray(_ref7, 2),\n    videoDuration = _ref8[0],\n    setVideoDuration = _ref8[1];\n  var isMounted = (0, use_is_mounted_1[\"default\"])();\n  var mousedownId = (0, react_1.useRef)();\n  var _ref9 = (0, react_1.useContext)(Global_1[\"default\"]),\n    width = _ref9.width,\n    height = _ref9.height,\n    loop = _ref9.loop,\n    currentIndex = _ref9.currentIndex,\n    isPaused = _ref9.isPaused,\n    keyboardNavigation = _ref9.keyboardNavigation,\n    preventDefault = _ref9.preventDefault,\n    _ref9$storyContainerS = _ref9.storyContainerStyles,\n    storyContainerStyles = _ref9$storyContainerS === void 0 ? {} : _ref9$storyContainerS,\n    onAllStoriesEnd = _ref9.onAllStoriesEnd,\n    onPrevious = _ref9.onPrevious,\n    onNext = _ref9.onNext,\n    preloadCount = _ref9.preloadCount;\n  var _ref10 = (0, react_1.useContext)(Stories_1[\"default\"]),\n    stories = _ref10.stories;\n  (0, usePreLoader_1.usePreLoader)(stories, currentId, preloadCount);\n  (0, react_1.useEffect)(function () {\n    if (typeof currentIndex === \"number\") {\n      if (currentIndex >= 0 && currentIndex < stories.length) {\n        setCurrentIdWrapper(function () {\n          return currentIndex;\n        });\n      } else {\n        console.error(\"Index out of bounds. Current index was set to value more than the length of stories array.\", currentIndex);\n      }\n    }\n  }, [currentIndex]);\n  (0, react_1.useEffect)(function () {\n    if (typeof isPaused === \"boolean\") {\n      setPause(isPaused);\n    }\n  }, [isPaused]);\n  (0, react_1.useEffect)(function () {\n    var isClient = typeof window !== \"undefined\" && window.document;\n    if (isClient && typeof keyboardNavigation === \"boolean\" && keyboardNavigation) {\n      document.addEventListener(\"keydown\", handleKeyDown);\n      return function () {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n      };\n    }\n  }, [keyboardNavigation]);\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === \"ArrowLeft\") {\n      previous();\n    } else if (e.key === \"ArrowRight\") {\n      next({\n        isSkippedByUser: true\n      });\n    }\n  };\n  var toggleState = function toggleState(action, bufferAction) {\n    setPause(action === \"pause\");\n    setBufferAction(!!bufferAction);\n  };\n  var setCurrentIdWrapper = function setCurrentIdWrapper(callback) {\n    setCurrentId(callback);\n    toggleState(\"pause\", true);\n  };\n  var previous = function previous() {\n    if (onPrevious != undefined) {\n      onPrevious();\n    }\n    setCurrentIdWrapper(function (prev) {\n      return prev > 0 ? prev - 1 : prev;\n    });\n  };\n  var next = function next(options) {\n    if (onNext != undefined && (options === null || options === void 0 ? void 0 : options.isSkippedByUser)) {\n      onNext();\n    }\n    // Check if component is mounted - for issue #130 (https://github.com/mohitk05/react-insta-stories/issues/130)\n    if (isMounted()) {\n      if (loop) {\n        updateNextStoryIdForLoop();\n      } else {\n        updateNextStoryId();\n      }\n    }\n  };\n  var updateNextStoryIdForLoop = function updateNextStoryIdForLoop() {\n    setCurrentIdWrapper(function (prev) {\n      if (prev >= stories.length - 1) {\n        onAllStoriesEnd && onAllStoriesEnd(currentId, stories);\n      }\n      return (prev + 1) % stories.length;\n    });\n  };\n  var updateNextStoryId = function updateNextStoryId() {\n    setCurrentIdWrapper(function (prev) {\n      if (prev < stories.length - 1) return prev + 1;\n      onAllStoriesEnd && onAllStoriesEnd(currentId, stories);\n      return prev;\n    });\n  };\n  var debouncePause = function debouncePause(e) {\n    e.preventDefault();\n    mousedownId.current = setTimeout(function () {\n      toggleState(\"pause\");\n    }, 200);\n  };\n  var mouseUp = function mouseUp(type) {\n    return function (e) {\n      e.preventDefault();\n      mousedownId.current && clearTimeout(mousedownId.current);\n      if (pause) {\n        toggleState(\"play\");\n      } else {\n        type === \"next\" ? next({\n          isSkippedByUser: true\n        }) : previous();\n      }\n    };\n  };\n  var getVideoDuration = function getVideoDuration(duration) {\n    setVideoDuration(duration * 1000);\n  };\n  return react_1[\"default\"].createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, styles.container), storyContainerStyles), {\n      width: width,\n      height: height\n    })\n  }, react_1[\"default\"].createElement(Progress_1[\"default\"].Provider, {\n    value: {\n      bufferAction: bufferAction,\n      videoDuration: videoDuration,\n      currentId: currentId,\n      pause: pause,\n      next: next\n    }\n  }, react_1[\"default\"].createElement(ProgressArray_1[\"default\"], null)), react_1[\"default\"].createElement(Story_1[\"default\"], {\n    action: toggleState,\n    bufferAction: bufferAction,\n    playState: pause,\n    story: stories[currentId],\n    getVideoDuration: getVideoDuration\n  }), !preventDefault && react_1[\"default\"].createElement(\"div\", {\n    style: styles.overlay\n  }, react_1[\"default\"].createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      zIndex: 999\n    },\n    onTouchStart: debouncePause,\n    onTouchEnd: mouseUp(\"previous\"),\n    onMouseDown: debouncePause,\n    onMouseUp: mouseUp(\"previous\")\n  }), react_1[\"default\"].createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      zIndex: 999\n    },\n    onTouchStart: debouncePause,\n    onTouchEnd: mouseUp(\"next\"),\n    onMouseDown: debouncePause,\n    onMouseUp: mouseUp(\"next\")\n  })));\n}\nexports[\"default\"] = default_1;\nvar styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#111\",\n    position: \"relative\",\n    WebkitUserSelect: 'none'\n  },\n  overlay: {\n    position: \"absolute\",\n    height: \"inherit\",\n    width: \"inherit\",\n    display: \"flex\"\n  }\n};\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_13938__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importDefault(__nested_webpack_require_13938__(639));\nvar Header = function Header(_ref) {\n  var profileImage = _ref.profileImage,\n    heading = _ref.heading,\n    subheading = _ref.subheading;\n  return react_1[\"default\"].createElement(\"div\", {\n    style: styles.main\n  }, profileImage && react_1[\"default\"].createElement(\"img\", {\n    style: styles.img,\n    src: profileImage\n  }), react_1[\"default\"].createElement(\"span\", {\n    style: styles.text\n  }, react_1[\"default\"].createElement(\"p\", {\n    style: styles.heading\n  }, heading), react_1[\"default\"].createElement(\"p\", {\n    style: styles.subheading\n  }, subheading)));\n};\nvar styles = {\n  main: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  img: {\n    width: 40,\n    height: 40,\n    borderRadius: 40,\n    marginRight: 10,\n    filter: \"drop-shadow(0 0px 2px rgba(0, 0, 0, 0.5))\",\n    border: \"2px solid rgba(255, 255, 255, 0.8)\"\n  },\n  text: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    filter: \"drop-shadow(0 0px 3px rgba(0, 0, 0, 0.9))\"\n  },\n  heading: {\n    fontSize: \"1rem\",\n    color: \"rgba(255, 255, 255, 0.9)\",\n    margin: 0,\n    marginBottom: 2\n  },\n  subheading: {\n    fontSize: \"0.6rem\",\n    color: \"rgba(255, 255, 255, 0.8)\",\n    margin: 0\n  }\n};\nexports[\"default\"] = Header;\n\n/***/ }),\n\n/***/ 911:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_15505__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_15505__(639));\nvar ProgressWrapper_1 = __importDefault(__nested_webpack_require_15505__(424));\nvar Global_1 = __importDefault(__nested_webpack_require_15505__(267));\nvar Progress_1 = __importDefault(__nested_webpack_require_15505__(552));\nexports[\"default\"] = function (props) {\n  var _ref = (0, react_1.useContext)(Global_1[\"default\"]),\n    progressStyles = _ref.progressStyles;\n  var _ref2 = (0, react_1.useContext)(Progress_1[\"default\"]),\n    bufferAction = _ref2.bufferAction,\n    pause = _ref2.pause;\n  var getProgressStyle = function getProgressStyle(_ref3) {\n    var active = _ref3.active;\n    switch (active) {\n      case 2:\n        return {\n          width: '100%'\n        };\n      case 1:\n        return {\n          transform: \"scaleX(\".concat(props.count / 100, \")\")\n        };\n      case 0:\n        return {\n          width: 0\n        };\n      default:\n        return {\n          width: 0\n        };\n    }\n  };\n  var width = props.width,\n    active = props.active;\n  return react_1[\"default\"].createElement(ProgressWrapper_1[\"default\"], {\n    width: width,\n    pause: pause,\n    bufferAction: bufferAction\n  }, react_1[\"default\"].createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, styles.inner), progressStyles), getProgressStyle({\n      active: active\n    }))\n  }));\n};\nvar styles = {\n  inner: {\n    background: '#fff',\n    height: '100%',\n    maxWidth: '100%',\n    borderRadius: 2,\n    transformOrigin: 'center left',\n    WebkitBackfaceVisibility: 'hidden',\n    MozBackfaceVisibility: 'hidden',\n    msBackfaceVisibility: 'hidden',\n    backfaceVisibility: 'hidden',\n    WebkitPerspective: 1000,\n    MozPerspective: 1000,\n    msPerspective: 1000,\n    perspective: 1000\n  }\n};\n\n/***/ }),\n\n/***/ 913:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_18560__) {\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_18560__(639));\nvar Progress_1 = __importDefault(__nested_webpack_require_18560__(911));\nvar Progress_2 = __importDefault(__nested_webpack_require_18560__(552));\nvar Global_1 = __importDefault(__nested_webpack_require_18560__(267));\nvar Stories_1 = __importDefault(__nested_webpack_require_18560__(486));\nvar time_1 = __nested_webpack_require_18560__(335);\nexports[\"default\"] = function () {\n  var _ref = (0, react_1.useState)(0),\n    _ref2 = _slicedToArray(_ref, 2),\n    count = _ref2[0],\n    setCount = _ref2[1];\n  var lastTime = (0, react_1.useRef)();\n  var _ref3 = (0, react_1.useContext)(Progress_2[\"default\"]),\n    currentId = _ref3.currentId,\n    next = _ref3.next,\n    videoDuration = _ref3.videoDuration,\n    pause = _ref3.pause,\n    bufferAction = _ref3.bufferAction;\n  var _ref4 = (0, react_1.useContext)(Global_1[\"default\"]),\n    defaultInterval = _ref4.defaultInterval,\n    onStoryEnd = _ref4.onStoryEnd,\n    onStoryStart = _ref4.onStoryStart,\n    progressContainerStyles = _ref4.progressContainerStyles;\n  var _ref5 = (0, react_1.useContext)(Stories_1[\"default\"]),\n    stories = _ref5.stories;\n  (0, react_1.useEffect)(function () {\n    setCount(0);\n  }, [currentId, stories]);\n  (0, react_1.useEffect)(function () {\n    if (!pause) {\n      animationFrameId.current = requestAnimationFrame(incrementCount);\n      lastTime.current = (0, time_1.timestamp)();\n    }\n    return function () {\n      cancelAnimationFrame(animationFrameId.current);\n    };\n  }, [currentId, pause]);\n  var animationFrameId = (0, react_1.useRef)();\n  var countCopy = count;\n  var incrementCount = function incrementCount() {\n    if (countCopy === 0) storyStartCallback();\n    if (lastTime.current == undefined) lastTime.current = (0, time_1.timestamp)();\n    var t = (0, time_1.timestamp)();\n    var dt = t - lastTime.current;\n    lastTime.current = t;\n    setCount(function (count) {\n      var interval = getCurrentInterval();\n      countCopy = count + dt * 100 / interval;\n      return countCopy;\n    });\n    if (countCopy < 100) {\n      animationFrameId.current = requestAnimationFrame(incrementCount);\n    } else {\n      storyEndCallback();\n      cancelAnimationFrame(animationFrameId.current);\n      next();\n    }\n  };\n  var storyStartCallback = function storyStartCallback() {\n    onStoryStart && onStoryStart(currentId, stories[currentId]);\n  };\n  var storyEndCallback = function storyEndCallback() {\n    onStoryEnd && onStoryEnd(currentId, stories[currentId]);\n  };\n  var getCurrentInterval = function getCurrentInterval() {\n    if (stories[currentId].type === \"video\") return videoDuration;\n    if (typeof stories[currentId].duration === \"number\") return stories[currentId].duration;\n    return defaultInterval;\n  };\n  var opacityStyles = {\n    opacity: pause && !bufferAction ? 0 : 1\n  };\n  return react_1[\"default\"].createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, styles.progressArr), progressContainerStyles), opacityStyles)\n  }, stories.map(function (_, i) {\n    return react_1[\"default\"].createElement(Progress_1[\"default\"], {\n      key: i,\n      count: count,\n      width: 1 / stories.length,\n      active: i === currentId ? 1 : i < currentId ? 2 : 0\n    });\n  }));\n};\nvar styles = {\n  progressArr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    maxWidth: \"100%\",\n    flexWrap: \"nowrap\",\n    position: \"absolute\",\n    width: \"98%\",\n    padding: 5,\n    paddingTop: 7,\n    alignSelf: \"center\",\n    zIndex: 1001,\n    filter: \"drop-shadow(0 1px 8px #222)\",\n    transition: \"opacity 400ms ease-in-out\"\n  }\n};\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_25035__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_25035__(639));\nvar Global_1 = __importDefault(__nested_webpack_require_25035__(267));\nvar ProgressWrapper = function ProgressWrapper(props) {\n  var _ref = (0, react_1.useContext)(Global_1[\"default\"]),\n    progressWrapperStyles = _ref.progressWrapperStyles;\n  return react_1[\"default\"].createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, styles.progress), progressWrapperStyles), getProgressWrapperStyle(props))\n  }, props.children);\n};\nvar getProgressWrapperStyle = function getProgressWrapperStyle(_ref2) {\n  var width = _ref2.width;\n  return {\n    width: \"\".concat(width * 100, \"%\")\n  };\n};\nvar styles = {\n  progress: {\n    height: 2,\n    maxWidth: '100%',\n    background: '#555',\n    margin: 2,\n    borderRadius: 2,\n    WebkitBackfaceVisibility: 'hidden',\n    MozBackfaceVisibility: 'hidden',\n    msBackfaceVisibility: 'hidden',\n    backfaceVisibility: 'hidden'\n  }\n};\nexports[\"default\"] = ProgressWrapper;\n\n/***/ }),\n\n/***/ 771:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_27337__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_27337__(639));\nvar Global_1 = __importDefault(__nested_webpack_require_27337__(267));\nfunction seeMore(props) {\n  var SeeMoreContent = props.seeMoreContent;\n  var CustomCollapsed = props.customCollapsed;\n  var _ref = (0, react_1.useContext)(Global_1[\"default\"]),\n    keyboardNavigation = _ref.keyboardNavigation;\n  (0, react_1.useEffect)(function () {\n    var isClient = typeof window !== 'undefined' && window.document;\n    if (isClient && typeof keyboardNavigation === 'boolean' && keyboardNavigation) {\n      document.addEventListener(\"keydown\", handleKeyDown);\n      return function () {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n      };\n    }\n  }, [keyboardNavigation]);\n  var handleKeyDown = function handleKeyDown(e) {\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      props.toggleMore(true);\n    } else if (e.key === 'ArrowDown' || e.key === 'Escape') {\n      e.preventDefault();\n      props.toggleMore(false);\n    }\n  };\n  return props.showContent ? react_1[\"default\"].createElement(\"div\", {\n    style: styles.seeMoreExpanded\n  }, react_1[\"default\"].createElement(SeeMoreContent, {\n    close: function close() {\n      return props.toggleMore(false);\n    }\n  })) : CustomCollapsed ? react_1[\"default\"].createElement(CustomCollapsed, {\n    action: props.action,\n    toggleMore: props.toggleMore\n  }) : react_1[\"default\"].createElement(\"div\", {\n    style: styles.seeMore,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      props.toggleMore(true);\n    }\n  }, react_1[\"default\"].createElement(\"span\", {\n    style: styles.seeMoreIcon\n  }, \"\\u2303\"), react_1[\"default\"].createElement(\"span\", {\n    style: styles.seeMoreText\n  }, \"See more\"));\n}\nexports[\"default\"] = seeMore;\nvar styles = {\n  seeMore: {\n    height: \"10vh\",\n    background: \"linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2))\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    bottom: 0\n  },\n  seeMoreExpanded: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    boxSizing: 'border-box',\n    zIndex: 99999\n  },\n  seeMoreText: {\n    color: \"white\",\n    textAlign: \"center\",\n    letterSpacing: \"0.1em\",\n    marginBottom: \"2.2vh\",\n    textTransform: \"capitalize\",\n    opacity: \"1\",\n    fontSize: \"0.8em\",\n    transition: \"opacity 300ms ease-in-out\"\n  },\n  seeMoreIcon: {\n    color: \"white\",\n    textAlign: \"center\",\n    letterSpacing: \"0.2em\",\n    marginBottom: \"0.4vh\",\n    opacity: \"1\",\n    filter: \"drop-shadow(0 0 5px black)\",\n    textTransform: \"capitalize\",\n    transition: \"opacity 300ms ease-in-out\"\n  },\n  seeMoreClose: {\n    position: \"absolute\",\n    filter: \"drop-shadow(0 3px 2px #ccc)\",\n    right: \"0.5rem\",\n    top: \"0.5rem\",\n    fontSize: \"1.5rem\",\n    opacity: \"0.7\",\n    padding: \"1rem\"\n  }\n};\n\n/***/ }),\n\n/***/ 353:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_31584__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importDefault(__nested_webpack_require_31584__(639));\nvar puff_svg_1 = __importDefault(__nested_webpack_require_31584__(931));\nvar Spinner = function Spinner() {\n  return react_1[\"default\"].createElement(puff_svg_1[\"default\"], null);\n};\nexports[\"default\"] = Spinner;\n\n/***/ }),\n\n/***/ 832:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_32146__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_32146__(639));\nvar Global_1 = __importDefault(__nested_webpack_require_32146__(267));\nvar Story = function Story(props) {\n  var globalContext = (0, react_1.useContext)(Global_1[\"default\"]);\n  var width = globalContext.width,\n    height = globalContext.height,\n    loader = globalContext.loader,\n    header = globalContext.header,\n    storyStyles = globalContext.storyStyles,\n    _globalContext$storyI = globalContext.storyInnerContainerStyles,\n    storyInnerContainerStyles = _globalContext$storyI === void 0 ? {} : _globalContext$storyI;\n  var rendererMessageHandler = function rendererMessageHandler(type, data) {\n    switch (type) {\n      case \"UPDATE_VIDEO_DURATION\":\n        props.getVideoDuration(data.duration);\n        return {\n          ack: \"OK\"\n        };\n    }\n  };\n  var getStoryContent = function getStoryContent() {\n    var InnerContent = props.story.content;\n    var config = {\n      width: width,\n      height: height,\n      loader: loader,\n      header: header,\n      storyStyles: storyStyles\n    };\n    return react_1[\"default\"].createElement(InnerContent, {\n      action: props.action,\n      isPaused: props.playState,\n      story: props.story,\n      config: config,\n      messageHandler: rendererMessageHandler\n    });\n  };\n  return react_1[\"default\"].createElement(\"div\", {\n    style: Object.assign(Object.assign(Object.assign({}, styles.story), storyInnerContainerStyles), {\n      width: width,\n      height: height\n    })\n  }, getStoryContent());\n};\nvar styles = {\n  story: {\n    display: \"flex\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    alignItems: \"center\"\n  },\n  storyContent: {\n    width: \"auto\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    margin: \"auto\"\n  }\n};\nexports[\"default\"] = Story;\n\n/***/ }),\n\n/***/ 267:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_35247__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.initialContext = void 0;\nvar react_1 = __importDefault(__nested_webpack_require_35247__(639));\nexports.initialContext = {\n  defaultInterval: 4000,\n  width: 360,\n  height: 640\n};\nvar GlobalContext = react_1[\"default\"].createContext(exports.initialContext);\nexports[\"default\"] = GlobalContext;\n\n/***/ }),\n\n/***/ 552:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_35839__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importDefault(__nested_webpack_require_35839__(639));\nexports[\"default\"] = react_1[\"default\"].createContext({\n  currentId: 0,\n  videoDuration: 0,\n  bufferAction: false,\n  pause: false,\n  next: function next() {}\n});\n\n/***/ }),\n\n/***/ 486:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_36363__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.initialContext = void 0;\nvar react_1 = __importDefault(__nested_webpack_require_36363__(639));\nexports.initialContext = {\n  stories: []\n};\nvar StoriesContext = react_1[\"default\"].createContext(exports.initialContext);\nexports[\"default\"] = StoriesContext;\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_36918__) {\n\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.WithSeeMore = exports.WithHeader = void 0;\nvar react_1 = __importStar(__nested_webpack_require_36918__(639));\nvar Container_1 = __importDefault(__nested_webpack_require_36918__(120));\nvar Global_1 = __importDefault(__nested_webpack_require_36918__(267));\nvar Stories_1 = __importDefault(__nested_webpack_require_36918__(486));\nvar renderers_1 = __nested_webpack_require_36918__(371);\nvar index_1 = __nested_webpack_require_36918__(942);\nvar withHeader_1 = __importDefault(__nested_webpack_require_36918__(803));\nvar withSeeMore_1 = __importDefault(__nested_webpack_require_36918__(763));\nvar ReactInstaStories = function ReactInstaStories(props) {\n  var renderers = props.renderers ? props.renderers.concat(index_1.renderers) : index_1.renderers;\n  var context = {\n    width: props.width,\n    height: props.height,\n    loader: props.loader,\n    header: props.header,\n    storyContainerStyles: props.storyContainerStyles,\n    storyInnerContainerStyles: props.storyInnerContainerStyles,\n    storyStyles: props.storyStyles,\n    progressContainerStyles: props.progressContainerStyles,\n    progressWrapperStyles: props.progressWrapperStyles,\n    progressStyles: props.progressStyles,\n    loop: props.loop,\n    defaultInterval: props.defaultInterval,\n    isPaused: props.isPaused,\n    currentIndex: props.currentIndex,\n    onStoryStart: props.onStoryStart,\n    onStoryEnd: props.onStoryEnd,\n    onAllStoriesEnd: props.onAllStoriesEnd,\n    onNext: props.onNext,\n    onPrevious: props.onPrevious,\n    keyboardNavigation: props.keyboardNavigation,\n    preventDefault: props.preventDefault,\n    preloadCount: props.preloadCount\n  };\n  var _ref = (0, react_1.useState)({\n      stories: generateStories(props.stories, renderers)\n    }),\n    _ref2 = _slicedToArray(_ref, 2),\n    stories = _ref2[0],\n    setStories = _ref2[1];\n  (0, react_1.useEffect)(function () {\n    setStories({\n      stories: generateStories(props.stories, renderers)\n    });\n  }, [props.stories, props.renderers]);\n  return react_1[\"default\"].createElement(Global_1[\"default\"].Provider, {\n    value: context\n  }, react_1[\"default\"].createElement(Stories_1[\"default\"].Provider, {\n    value: stories\n  }, react_1[\"default\"].createElement(Container_1[\"default\"], null)));\n};\nvar generateStories = function generateStories(stories, renderers) {\n  return stories.map(function (s) {\n    var story = {};\n    if (typeof s === 'string') {\n      story.url = s;\n      story.type = 'image';\n    } else if (_typeof(s) === 'object') {\n      story = Object.assign(story, s);\n    }\n    var renderer = (0, renderers_1.getRenderer)(story, renderers);\n    story.originalContent = story.content;\n    story.content = renderer;\n    return story;\n  });\n};\nReactInstaStories.defaultProps = {\n  width: 360,\n  height: 640,\n  defaultInterval: 4000,\n  preloadCount: 1\n};\nexports.WithHeader = withHeader_1[\"default\"];\nexports.WithSeeMore = withSeeMore_1[\"default\"];\nexports[\"default\"] = ReactInstaStories;\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_43048__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.tester = exports.renderer = void 0;\nvar React = __importStar(__nested_webpack_require_43048__(639));\nvar renderer = function renderer(props) {\n  React.useEffect(function () {\n    props.action('play');\n  }, [props.story]);\n  var Content = props.story.originalContent;\n  return React.createElement(Content, Object.assign({}, props));\n};\nexports.renderer = renderer;\nvar tester = function tester(story) {\n  return {\n    condition: !!story.content,\n    priority: 2\n  };\n};\nexports.tester = tester;\nexports[\"default\"] = {\n  renderer: exports.renderer,\n  tester: exports.tester\n};\n\n/***/ }),\n\n/***/ 248:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_44817__) {\n\n\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.tester = exports.renderer = void 0;\nvar React = __importStar(__nested_webpack_require_44817__(639));\nvar renderer = function renderer(_ref) {\n  var story = _ref.story,\n    action = _ref.action;\n  React.useEffect(function () {\n    action(\"play\");\n  }, [story]);\n  return React.createElement(\"div\", {\n    style: styles.storyContent\n  }, React.createElement(\"p\", {\n    style: styles.text\n  }, \"This story could not be loaded.\"));\n};\nexports.renderer = renderer;\nvar styles = {\n  storyContent: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n    margin: \"auto\"\n  },\n  text: {\n    textAlign: \"center\",\n    color: \"white\",\n    width: \"90%\",\n    margin: \"auto\"\n  }\n};\nvar tester = function tester() {\n  return {\n    condition: true,\n    priority: 1\n  };\n};\nexports.tester = tester;\nexports[\"default\"] = {\n  renderer: exports.renderer,\n  tester: exports.tester\n};\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_46863__) {\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.tester = exports.renderer = void 0;\nvar React = __importStar(__nested_webpack_require_46863__(639));\nvar Spinner_1 = __importDefault(__nested_webpack_require_46863__(353));\nvar withHeader_1 = __importDefault(__nested_webpack_require_46863__(803));\nvar withSeeMore_1 = __importDefault(__nested_webpack_require_46863__(763));\nvar renderer = function renderer(_ref) {\n  var story = _ref.story,\n    action = _ref.action,\n    isPaused = _ref.isPaused,\n    config = _ref.config;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  var width = config.width,\n    height = config.height,\n    loader = config.loader,\n    storyStyles = config.storyStyles;\n  var computedStyles = Object.assign(Object.assign({}, styles.storyContent), storyStyles || {});\n  var imageLoaded = function imageLoaded() {\n    setLoaded(true);\n    action(\"play\");\n  };\n  return React.createElement(withHeader_1[\"default\"], Object.assign({}, {\n    story: story,\n    globalHeader: config.header\n  }), React.createElement(withSeeMore_1[\"default\"], Object.assign({}, {\n    story: story,\n    action: action\n  }), React.createElement(\"div\", null, React.createElement(\"img\", {\n    style: computedStyles,\n    src: story.url,\n    onLoad: imageLoaded\n  }), !loaded && React.createElement(\"div\", {\n    style: {\n      width: width,\n      height: height,\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      background: \"rgba(0, 0, 0, 0.9)\",\n      zIndex: 9,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: \"#ccc\"\n    }\n  }, loader || React.createElement(Spinner_1[\"default\"], null)))));\n};\nexports.renderer = renderer;\nvar styles = {\n  story: {\n    display: \"flex\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  storyContent: {\n    width: \"auto\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    margin: \"auto\"\n  }\n};\nvar tester = function tester(story) {\n  return {\n    condition: !story.content && (!story.type || story.type === \"image\"),\n    priority: 2\n  };\n};\nexports.tester = tester;\nexports[\"default\"] = {\n  renderer: exports.renderer,\n  tester: exports.tester\n};\n\n/***/ }),\n\n/***/ 544:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_51990__) {\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.tester = exports.renderer = void 0;\nvar React = __importStar(__nested_webpack_require_51990__(639));\nvar Spinner_1 = __importDefault(__nested_webpack_require_51990__(353));\nvar withHeader_1 = __importDefault(__nested_webpack_require_51990__(803));\nvar withSeeMore_1 = __importDefault(__nested_webpack_require_51990__(763));\nvar renderer = function renderer(_ref) {\n  var story = _ref.story,\n    action = _ref.action,\n    isPaused = _ref.isPaused,\n    config = _ref.config,\n    messageHandler = _ref.messageHandler;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    loaded = _React$useState2[0],\n    setLoaded = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    muted = _React$useState4[0],\n    setMuted = _React$useState4[1];\n  var width = config.width,\n    height = config.height,\n    loader = config.loader,\n    storyStyles = config.storyStyles;\n  var computedStyles = Object.assign(Object.assign({}, styles.storyContent), storyStyles || {});\n  var vid = React.useRef(null);\n  React.useEffect(function () {\n    if (vid.current) {\n      if (isPaused) {\n        vid.current.pause();\n      } else {\n        vid.current.play()[\"catch\"](function () {});\n      }\n    }\n  }, [isPaused]);\n  var onWaiting = function onWaiting() {\n    action(\"pause\", true);\n  };\n  var onPlaying = function onPlaying() {\n    action(\"play\", true);\n  };\n  var videoLoaded = function videoLoaded() {\n    messageHandler(\"UPDATE_VIDEO_DURATION\", {\n      duration: vid.current.duration\n    });\n    setLoaded(true);\n    vid.current.play().then(function () {\n      action(\"play\");\n    })[\"catch\"](function () {\n      setMuted(true);\n      vid.current.play()[\"finally\"](function () {\n        action(\"play\");\n      });\n    });\n  };\n  return React.createElement(withHeader_1[\"default\"], Object.assign({}, {\n    story: story,\n    globalHeader: config.header\n  }), React.createElement(withSeeMore_1[\"default\"], Object.assign({}, {\n    story: story,\n    action: action\n  }), React.createElement(\"div\", {\n    style: styles.videoContainer\n  }, React.createElement(\"video\", {\n    ref: vid,\n    style: computedStyles,\n    src: story.url,\n    controls: false,\n    onLoadedData: videoLoaded,\n    playsInline: true,\n    onWaiting: onWaiting,\n    onPlaying: onPlaying,\n    muted: muted,\n    autoPlay: true,\n    \"webkit-playsinline\": \"true\"\n  }), !loaded && React.createElement(\"div\", {\n    style: {\n      width: width,\n      height: height,\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      background: \"rgba(0, 0, 0, 0.9)\",\n      zIndex: 9,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: \"#ccc\"\n    }\n  }, loader || React.createElement(Spinner_1[\"default\"], null)))));\n};\nexports.renderer = renderer;\nvar styles = {\n  storyContent: {\n    width: \"auto\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n    margin: \"auto\"\n  },\n  videoContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\nvar tester = function tester(story) {\n  return {\n    condition: story.type === \"video\",\n    priority: 2\n  };\n};\nexports.tester = tester;\nexports[\"default\"] = {\n  renderer: exports.renderer,\n  tester: exports.tester\n};\n\n/***/ }),\n\n/***/ 942:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_58202__) {\n\n\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.renderers = void 0;\nvar Image_1 = __importDefault(__nested_webpack_require_58202__(209));\nvar Video_1 = __importDefault(__nested_webpack_require_58202__(544));\nvar Default_1 = __importDefault(__nested_webpack_require_58202__(248));\nvar AutoPlayContent_1 = __importDefault(__nested_webpack_require_58202__(350));\nexports.renderers = [Image_1[\"default\"], Video_1[\"default\"], AutoPlayContent_1[\"default\"], Default_1[\"default\"]];\n\n/***/ }),\n\n/***/ 803:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_58889__) {\n\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importDefault(__nested_webpack_require_58889__(639));\nvar Header_1 = __importDefault(__nested_webpack_require_58889__(463));\nvar withHeader = function withHeader(_ref) {\n  var story = _ref.story,\n    globalHeader = _ref.globalHeader,\n    children = _ref.children;\n  return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, children, story.header && react_1[\"default\"].createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: 12,\n      top: 20,\n      zIndex: 19\n    }\n  }, _typeof(story) === \"object\" ? globalHeader ? globalHeader(story.header) : react_1[\"default\"].createElement(Header_1[\"default\"], {\n    heading: story.header.heading,\n    subheading: story.header.subheading,\n    profileImage: story.header.profileImage\n  }) : null));\n};\nexports[\"default\"] = withHeader;\n\n/***/ }),\n\n/***/ 763:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_60331__) {\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __importStar(__nested_webpack_require_60331__(639));\nvar SeeMore_1 = __importDefault(__nested_webpack_require_60331__(771));\nvar withSeeMore = function withSeeMore(_ref) {\n  var story = _ref.story,\n    action = _ref.action,\n    customCollapsed = _ref.customCollapsed,\n    children = _ref.children;\n  var _ref2 = (0, react_1.useState)(false),\n    _ref3 = _slicedToArray(_ref2, 2),\n    showMore = _ref3[0],\n    setShowMore = _ref3[1];\n  var toggleMore = function toggleMore(show) {\n    action(show ? \"pause\" : \"play\");\n    setShowMore(show);\n  };\n  var CollapsedComponent = SeeMore_1[\"default\"];\n  return react_1[\"default\"].createElement(react_1[\"default\"].Fragment, null, children, story.seeMore && react_1[\"default\"].createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      margin: \"auto\",\n      bottom: showMore ? \"unset\" : 0,\n      zIndex: 9999,\n      width: \"100%\",\n      height: showMore ? \"100%\" : \"auto\"\n    }\n  }, react_1[\"default\"].createElement(CollapsedComponent, {\n    action: action,\n    toggleMore: toggleMore,\n    showContent: showMore,\n    seeMoreContent: story.seeMore,\n    customCollapsed: customCollapsed || story.seeMoreCollapsed\n  })));\n};\nexports[\"default\"] = withSeeMore;\n\n/***/ }),\n\n/***/ 371:\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getRenderer = void 0;\nvar getRenderer = function getRenderer(story, renderers) {\n  var probable = renderers.map(function (r) {\n    return Object.assign(Object.assign({}, r), {\n      testerResult: r.tester(story)\n    });\n  }).filter(function (r) {\n    return r.testerResult.condition;\n  });\n  probable.sort(function (a, b) {\n    return b.testerResult.priority - a.testerResult.priority;\n  });\n  return probable[0].renderer;\n};\nexports.getRenderer = getRenderer;\n\n/***/ }),\n\n/***/ 335:\n/***/ ((__unused_webpack_module, exports) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.timestamp = void 0;\nfunction timestamp() {\n  return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n}\nexports.timestamp = timestamp;\n\n/***/ }),\n\n/***/ 342:\n/***/ ((__unused_webpack_module, exports, __nested_webpack_require_65409__) => {\n\n\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar react_1 = __nested_webpack_require_65409__(639);\nfunction useIsMounted() {\n  var isMounted = (0, react_1.useRef)(false);\n  (0, react_1.useEffect)(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return (0, react_1.useCallback)(function () {\n    return isMounted.current;\n  }, []);\n}\nexports[\"default\"] = useIsMounted;\n\n/***/ }),\n\n/***/ 402:\n/***/ (function(__unused_webpack_module, exports, __nested_webpack_require_65959__) {\n\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.usePreLoader = void 0;\nvar react_1 = __nested_webpack_require_65959__(639);\n// Caches given Story[] using HTMLImageElement and HTMLVideoElement\nvar cacheContent = function cacheContent(contents) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var promises;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          promises = contents.map(function (content) {\n            return new Promise(function (resolve, reject) {\n              if (!content.url) return;\n              if (content.type === 'video') {\n                var video = document.createElement('video');\n                video.src = content.url;\n                video.onloadeddata = resolve;\n                video.onerror = reject;\n                return;\n              }\n              var img = new Image();\n              img.src = content.url;\n              img.onload = resolve;\n              img.onerror = reject;\n            });\n          });\n          _context.next = 3;\n          return Promise.all(promises);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n};\n// Keeps track of urls that have been loaded\nvar urlsLoaded = new Set();\n// Pushes urls to urlsLoaded\nvar markUrlsLoaded = function markUrlsLoaded(contents) {\n  contents.forEach(function (content) {\n    urlsLoaded.add(content.url);\n  });\n};\n// Returns true if given Story should be preloaded\nvar shouldPreload = function shouldPreload(content) {\n  if (!content.url) return false;\n  if (urlsLoaded.has(content.url)) return false;\n  if (content.preloadResource !== undefined) return content.preloadResource;\n  if (content.type === 'video') return false;\n  return true;\n};\n// Preloads images and videos from given Story[] using a cursor and preloadCount\n// Preload count is the number of images/videos to preload after the cursor\n// Cursor is the current index to start preloading from\nvar usePreLoader = function usePreLoader(contents, cursor, preloadCount) {\n  (0, react_1.useEffect)(function () {\n    var start = cursor + 1;\n    var end = cursor + preloadCount + 1;\n    var toPreload = contents.slice(start, end).filter(shouldPreload);\n    markUrlsLoaded(toPreload);\n    cacheContent(toPreload);\n  }, [cursor, preloadCount, contents]);\n};\nexports.usePreLoader = usePreLoader;\n\n/***/ }),\n\n/***/ 639:\n/***/ ((module) => {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__639__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_81981__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_81981__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_81981__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_81981__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_81981__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_81981__.o(definition, key) && !__nested_webpack_require_81981__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_81981__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_81981__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_81981__(370);\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-insta-stories/dist/index.js\n");

/***/ })

};
;